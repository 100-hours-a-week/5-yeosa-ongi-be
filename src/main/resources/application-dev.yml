spring:
  threads:
    virtual:
      enabled: true

  data:
    redis:
      host: ${sm://redis_server_url}  # Secret Manager에서 가져오기
      port: 6379

  kakao:
    auth:
      client: ${sm://kakao-client-id}  # Secret Manager에서 가져오기
      redirect: https://dev.ongi.today/auth/callback/kakao

  datasource:
    url: ${sm://db-url-dev}           # Secret Manager에서 가져오기
    username: ${sm://db-user-dev}     # Secret Manager에서 가져오기
    password: ${sm://db-password-dev} # Secret Manager에서 가져오기
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      leak-detection-threshold: 30000
      maximum-pool-size: 30

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        format_sql: false
        type: trace

  sql:
    init:
      mode: never

  flyway:
    url: ${sm://flyway-url-dev}         # Secret Manager에서 가져오기
    user: ${sm://flyway-user-dev}       # Secret Manager에서 가져오기
    password: ${sm://flyway-password-dev} # Secret Manager에서 가져오기
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

cloud:
  aws:
    credentials:
      access-key: ${sm://aws-access-key-id}     # Secret Manager에서 가져오기
      secret-key: ${sm://aws-secret-access-key} # Secret Manager에서 가져오기
    region:
      static: ${sm://aws-region}                # Secret Manager에서 가져오기
    s3:
      bucket: ${sm://s3-bucket-name-dev}        # Secret Manager에서 가져오기
    stack:
      auto: false

jwt:
  secret: ${sm://jwt-secret}  # Secret Manager에서 가져오기

ai:
  server:
    base-url: ${sm://ai-server-url-dev}  # Secret Manager에서 가져오기

custom:
  isProd: false