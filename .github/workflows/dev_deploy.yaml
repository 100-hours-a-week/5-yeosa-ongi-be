name: Deploy DEV Backend on PR Merge

on:
  pull_request:
    branches:
      - dev
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: dev-ongi-3-tier

      - name: Configure Docker Auth
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev --quiet

      - name: Build & Push Docker Image
        env:
          TAG: dev-${{ github.sha }}
        run: |
          docker build -t asia-northeast3-docker.pkg.dev/dev-ongi-3-tier/dev-ongi-spring-repo/backend:$TAG .
          docker push asia-northeast3-docker.pkg.dev/dev-ongi-3-tier/dev-ongi-spring-repo/backend:$TAG

      - name: Deploy to Cloud Run
        env:
          TAG: dev-${{ github.sha }}
        run: |
          gcloud run deploy ongi-backend \
            --image asia-northeast3-docker.pkg.dev/dev-ongi-3-tier/dev-ongi-spring-repo/backend:${TAG} \
            --region asia-northeast3 \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars SPRING_PROFILES_ACTIVE=dev \
            --update-secrets=SPRING_DATASOURCE_URL=db_url_dev:latest \
            --update-secrets=SPRING_DATASOURCE_USERNAME=db_user_dev:latest \
            --update-secrets=SPRING_DATASOURCE_PASSWORD=db_password_dev:latest \
            --update-secrets=SPRING_DATA_REDIS_HOST=redis_server_url:latest \
            --update-secrets=JWT_SECRET=jwt_secret:latest \
            --update-secrets=AWS_ACCESS_KEY_ID=aws_access_key_id:latest \
            --update-secrets=AWS_SECRET_ACCESS_KEY=aws_secret_access_key:latest \
            --update-secrets=AWS_REGION=aws_region:latest \
            --update-secrets=S3_BUCKET_NAME_DEV=s3_bucket_name_dev:latest \
            --update-secrets=AI_SERVER_URL_DEV=ai_server_url_dev:latest \
            --update-secrets=KAKAO_CLIENT_ID=kakao_client_id:latest

      - name: Notify Discord on Success
        if: success()
        env:
          TAG: dev-${{ github.sha }}
        run: |
          echo '{
            "content": "**✅ DEV 백엔드 배포 완료!**",
            "embeds": [
              {
                "title": "'"${{ github.event.pull_request.title }}"'",
                "url": "'"${{ github.event.pull_request.html_url }}"'",
                "fields": [
                  { "name": "Repository", "value": "'"${{ github.repository }}"'", "inline": true },
                  { "name": "Author", "value": "'"${{ github.actor }}"'", "inline": true },
                  { "name": "Image Tag", "value": "'"${{ env.TAG }}"'", "inline": true }
                ],
                "color": 3066993
              }
            ]
          }' | curl -H "Content-Type: application/json" -X POST -d @- ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          echo '{
            "content": "**❌ DEV 백엔드 배포 실패!**",
            "embeds": [
              {
                "title": "'"${{ github.event.pull_request.title }}"'",
                "url": "'"${{ github.event.pull_request.html_url }}"'",
                "fields": [
                  { "name": "Repository", "value": "'"${{ github.repository }}"'", "inline": true },
                  { "name": "Author", "value": "'"${{ github.actor }}"'", "inline": true }
                ],
                "color": 15158332
              }
            ]
          }' | curl -H "Content-Type: application/json" -X POST -d @- ${{ secrets.DISCORD_WEBHOOK_URL }}
