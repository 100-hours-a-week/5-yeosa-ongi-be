name: Deploy Backend on PR Merge

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy-backend:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Backend Code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Initial Flyway Validate
        id: initial-validate
        continue-on-error: true
        run: |
          ./gradlew flywayValidate \
            -Dflyway.url=${{ secrets.PROD_FLYWAY_DB_URL }} \
            -Dflyway.user=${{ secrets.PROD_FLYWAY_DB_USER }} \
            -Dflyway.password=${{ secrets.PROD_FLYWAY_DB_PASSWORD }}

      - name: Try Flyway Migrate
        id: migrate
        continue-on-error: true
        run: |
          ./gradlew flywayMigrate \
            -Dflyway.url=${{ secrets.PROD_FLYWAY_DB_URL }} \
            -Dflyway.user=${{ secrets.PROD_FLYWAY_DB_USER }} \
            -Dflyway.password=${{ secrets.PROD_FLYWAY_DB_PASSWORD }}

      - name: Run Flyway Repair if Migrate Fails
        if: steps.migrate.outcome == 'failure'
        run: |
          ./gradlew flywayRepair \
            -Dflyway.url=${{ secrets.PROD_FLYWAY_DB_URL }} \
            -Dflyway.user=${{ secrets.PROD_FLYWAY_DB_USER }} \
            -Dflyway.password=${{ secrets.PROD_FLYWAY_DB_PASSWORD }}

      - name: Retry Flyway Migrate after Repair
        if: steps.migrate.outcome == 'failure'
        run: |
          ./gradlew flywayMigrate \
            -Dflyway.url=${{ secrets.PROD_FLYWAY_DB_URL }} \
            -Dflyway.user=${{ secrets.PROD_FLYWAY_DB_USER }} \
            -Dflyway.password=${{ secrets.PROD_FLYWAY_DB_PASSWORD }}

      - name: Final Flyway Validate
        run: |
          ./gradlew flywayValidate \
            -Dflyway.url=${{ secrets.PROD_FLYWAY_DB_URL }} \
            -Dflyway.user=${{ secrets.PROD_FLYWAY_DB_USER }} \
            -Dflyway.password=${{ secrets.PROD_FLYWAY_DB_PASSWORD }}


      - name: Build Spring Boot JAR
        run: ./gradlew clean build -x test

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build & Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ongi-backend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ongi-backend:latest

      - name: SSH into GCP and Deploy Backend
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_HOST_PROD }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_KEY_PROD }}
          script: |
            set -e
            cd /opt/app/ongi
            docker-compose down
            docker-compose pull
            docker-compose up -d
      - name: Notify Discord on Success
        if: success()
        run: |
          echo '{
            "content": "**‚úÖ PROD Î∞±ÏóîÎìú Î∞∞Ìè¨ ÏôÑÎ£å!** üéâ",
            "embeds": [
              {
                "title": "'"${{ github.event.pull_request.title }}"'",
                "url": "'"${{ github.event.pull_request.html_url }}"'",
                "fields": [
                  { "name": "Repository", "value": "'"${{ github.repository }}"'", "inline": true },
                  { "name": "Author", "value": "'"${{ github.actor }}"'", "inline": true }
                ],
                "color": 3066993
              }
            ]
          }' | curl -H "Content-Type: application/json" -X POST -d @- ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          echo '{
            "content": "**‚ùå PROD Î∞±ÏóîÎìú Î∞∞Ìè¨ Ïã§Ìå®!** üß®",
            "embeds": [
              {
                "title": "'"${{ github.event.pull_request.title }}"'",
                "url": "'"${{ github.event.pull_request.html_url }}"'",
                "fields": [
                  { "name": "Repository", "value": "'"${{ github.repository }}"'", "inline": true },
                  { "name": "Author", "value": "'"${{ github.actor }}"'", "inline": true }
                ],
                "color": 15158332
              }
            ]
          }' | curl -H "Content-Type: application/json" -X POST -d @- ${{ secrets.DISCORD_WEBHOOK_URL }}