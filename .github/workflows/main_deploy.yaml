name: Deploy PROD Backend on PR Merge

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: dev-ongi-3-tier

      - name: Configure Docker auth
        run: |
          gcloud auth configure-docker asia-northeast3-docker.pkg.dev --quiet

      - name: Build & Push Docker Image
        env:
          TAG: prod-${{ github.sha }}
        run: |
          docker build \
            -t asia-northeast3-docker.pkg.dev/dev-ongi-3-tier/prod-ongi-spring-repo/backend:$TAG .
          docker push \
            asia-northeast3-docker.pkg.dev/dev-ongi-3-tier/prod-ongi-spring-repo/backend:$TAG

      - name: Trigger Cloud Build (PROD)
        run: |
          gcloud builds submit . \
            --config=.gcp/cloudbuild-prod.yaml \
            --substitutions=_IMAGE_TAG=prod-${{ github.sha }},_TEMPLATE_NAME=ongi-prod-${{ github.run_number }} \
            --service-account=projects/dev-ongi-3-tier/serviceAccounts/github-cd-builder@dev-ongi-3-tier.iam.gserviceaccount.com

      - name: Notify Discord on Success
        if: success()
        env:
          TAG: prod-${{ github.sha }}
        run: |
          echo '{
            "content": "**✅ PROD 백엔드 배포 완료!**",
            "embeds": [
              {
                "title": "'"${{ github.event.pull_request.title }}"'",
                "url": "'"${{ github.event.pull_request.html_url }}"'",
                "fields": [
                  { "name": "Repository", "value": "'"${{ github.repository }}"'", "inline": true },
                  { "name": "Actor",      "value": "'"${{ github.actor }}"'",     "inline": true },
                  { "name": "Image Tag",   "value": "'"${{ env.TAG }}"'",          "inline": true }
                ],
                "color": 3066993
              }
            ]
          }' | curl -H "Content-Type: application/json" -X POST -d @- ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Failure
        if: failure()
        run: |
          echo '{
            "content": "**❌ PROD 백엔드 배포 실패!**",
            "embeds": [
              {
                "title": "'"${{ github.event.pull_request.title }}"'",
                "url": "'"${{ github.event.pull_request.html_url }}"'",
                "fields": [
                  { "name": "Repository", "value": "'"${{ github.repository }}"'", "inline": true },
                  { "name": "Actor",      "value": "'"${{ github.actor }}"'",     "inline": true }
                ],
                "color": 15158332
              }
            ]
          }' | curl -H "Content-Type: application/json" -X POST -d @- ${{ secrets.DISCORD_WEBHOOK_URL }}
