buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:10.20.1'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.asciidoctor.jvm.convert" version "4.0.2"
    id 'org.flywaydb.flyway' version '10.20.1'
    id "io.sentry.jvm.gradle" version "5.6.0"
}

sentry {
    includeSourceContext = true
    org = "ongi" // Sentry 조직명
    projectName = "dev-ongi" // Sentry 프로젝트명
    authToken = System.getenv("SENTRY_AUTH_TOKEN") // 환경변수로 설정
}

flyway {
    baselineOnMigrate = true
}

group = 'ongi'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    JJWT_VERSION = "0.12.3"
}

dependencies {
    implementation "io.jsonwebtoken:jjwt-api:${JJWT_VERSION}"
    runtimeOnly "io.jsonwebtoken:jjwt-gson:${JJWT_VERSION}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${JJWT_VERSION}"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.767'
    implementation 'com.drewnoakes:metadata-extractor:2.18.0'
    implementation 'software.amazon.awssdk:s3:2.27.3'
    implementation 'software.amazon.awssdk:s3control:2.27.3'
    implementation 'software.amazon.awssdk:s3outposts:2.27.3'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'io.sentry:sentry-spring-boot-starter:6.28.0'
    implementation 'io.micrometer:micrometer-registry-prometheus'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
